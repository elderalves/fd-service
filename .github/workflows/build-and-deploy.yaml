name: build-and-deploy

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: make build-image

      - env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: make build-image-push

  test:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: make build-image-pull

      - run: make up

      - env:
          GOOSE_DBSTRING: postgresql://postgres:password@localhost:5432/postgres?sslmode=disable
          GOOSE_DRIVER: postgres
        run: make build-image-migrate

      - if: always()
        run: make down

  deploy:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    concurrency:
      cancel-in-progress: false
      group: deploy-lock
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
      AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GOOSE_DBSTRING: ${{ secrets.GOOSE_DBSTRING }}
      GOOSE_DRIVER: ${{ vars.GOOSE_DRIVER }}
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: make build-image-pull
      - run: make build-image-migrate
      - run: make build-image-promote
